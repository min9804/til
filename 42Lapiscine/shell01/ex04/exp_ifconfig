ifconfig -a | grep -w 'ether' | awk '{print $2}'
NAME
     ifconfig -- configure network interface parameters

Optionally, the -a flag may be used instead of an interface name.  This flag
     instructs ifconfig to display information about all interfaces in the system.  The -d
     flag limits this to interfaces that are down, and -u limits this to interfaces that
     are up.  When no arguments are given, -a is implied.






First lets see the options for IFCONFIG on man ifconfig
Due to the present requirements we can see that we need the flag[OPTION] -a because that one display all interfaces which are currently available, even if down
And now we run the ifconfig -a to see the output, because depending on your system output the future commands may need some tweaking.
Here are a few ways:
grep. There are various regular expressions that will pick these up. Here, I am looking for 5 repetitions of 2 letters or numbers followed by a colon, then any two characters. The -i makes the match case insensitive and the -o makes grep print only the matched portion. -E enables extended regular expressions. The same regex also works with PCREs (-P).
ifconfig -a | grep -ioE '([a-z0-9]{2}:){5}..'
sed. The -n suppresses normal output and the -r enables extended regular expressions. Using the same regex as above, this script will attempt to replace everything on the line with the part of it that matches the regex. If the substitution was successful, the resulting line is printed (because of the p at the end of the substitution).
ifconfig -a | sed -rn 's/.*(([a-z0-9]{2}:){5}..).*/\1/p'
awk. If the line starts with a word character ([a-zA-Z0-9_]), and has 5 fields, print the last one.
ifconfig -a | awk '/^\w/&&NF==5{print $NF}'
Perl, where, as usual, there are more than one ways to do it. This one is the same logic as the awk above. The -a tells perl to split each input line into the @F array.
ifconfig -a | perl -lane 'if(/^\w/&&$#F==4){print $F[$#F]}'
Alternatively, you can use the regex from the previous approaches:

ifconfig -a | perl -lne '/(([a-z0-9]{2}:){5}..)/ && print $1'
Coreutils.
LANG_ALL=C ifconfig -a | grep 'ether' | tr -s ' ' '\t' | cut -f 3
OR

LANG_ALL=C ifconfig -a | grep 'HWadd' | tr -s ' ' '\t' | cut -f 5
In the end we can mix the concepts and come with a simplified way or use another one entirely, for example I just think this is a good answer if you're doing this on a linux machine like me:

ifconfig -a | grep ether | awk '{print $2}'
I chose this option since my MAC addresses are next to the word "ether" so the option grep gives me back the line where this word happens, and next with awk I can select the second group of word per line, which are the MACs.


grep -w : 단어(word) 단위로 매칭.




linux 문자열 위치 출력 - 검색

-awk command
대부분의 리눅스 명령들이, 그 명령의 이름만으로 대략적인 기능이 예상되는 것과 다르게, awk 명령은 이름에 그 기능을 의미하는 단어나 약어가 포함되어 있지 않습니다. awk는 최초에 awk 기능을 디자인한 사람들의 이니셜을 조합하여 만든 이름이기 때문입니다. Aho + Weinberger + Kernighan. (A:Alfred V. Aho, W:Peter J. Weinberger, K:Brian W. Kernighan)

awk는 파일로부터 레코드(record)를 선택하고, 선택된 레코드에 포함된 값을 조작하거나 데이터화하는 것을 목적으로 사용하는 프로그램입니다. 즉, awk 명령의 입력으로 지정된 파일로부터 데이터를 분류한 다음, 분류된 텍스트 데이터를 바탕으로 패턴 매칭 여부를 검사하거나 데이터 조작 및 연산 등의 액션을 수행하고, 그 결과를 출력하는 기능을 수행합니다.


