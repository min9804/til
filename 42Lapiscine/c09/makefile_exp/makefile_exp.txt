makefile_explain

소스파일을 컴파일을 하기위해서는 
gcc [옵션] [실행파일명] [소스파일명] 이 필요하다.

하지만 여러 파일을 컴파일 할 경우 각 소스 파일을 각각
.o 파일 오브젝트 파일로 만든 후 오브젝트 파일을 실행 파일로 만든다.

ex)
gcc -c hello.c
gcc -c main.c
gcc -o hello hello.o main.o

gcc -o hello hello.c main.c 처럼
소스파일로도 컴파일 할 수 있는데 왜 오브젝트 파일을 만들까?
소스 파일이 100개가 있는 경우 소스 파일로 컴파일 한다면
소스파일 한개에 문제가 생겼을 때 100개의 파일을 모두 다시 컴파일
해야한다. 이렇게 된다면 시간이 오래 걸리기 때문에 
각각의 오브젝트 파일을 만들어 놓고 수정할 소스가 생기면 수정후 
그 파일의 오브젝트 파일만 다시 만들면 된다.

위에 예 처럼 세줄을 쓰면서 컴파일 한다
너무 취찮으니까 만든 방법이 shellscript를 만들 수 있음

vim compile.sh파일

#!/bin/bash
gcc -c hello.c
gcc -c main.c
gcc -o hello hello.o main.o

chmod 755로 권한주기!
./copile.sh 하면 위에 3개의 명령어가 실행되면서 컴파일 된다.

하지만 shellscript를 작성해도 모든 소스파일을 오브젝트 파일로 만드는
과정을 거치게 된다. 이러면 또 시간이 오래 걸리기 때문에 이점이 없다.

이를 해결 하기 위해 makefile을 만들고 make프로그램을 이용한다.
make를 이용하면 변경된 소스만 오브젝트파일을 만들어 컴파일 하는
기능을 이용할 수 있다.

 









