1. 모든 연산은 CPU 에서 수행된다. 정확히 말하면, CPU 의 자그마한 레지스터 상에서 수행된다.
    64비트 CPU 의 경우 레지스터의 크기는 8바이트  이다.

2. CPU 는 무슨 연산을 할 지 알려주는 명령어와, 명령어를 실행 하기 위해 필요로 하는 데이터를 
    메모리(램) 에서 읽는다.

3. 우리가 프로그램을 실행한다는 것은 하드 디스크에 잠들어 있는 명령어들과 데이터를 
    메모리에 쓰는 것이라 생각하면 된다. 그리고 운영체제가 CPU 에 처음으로 실행해 할
    명령어의 주소값을 전달함으로써 프로그램이 시작된다.

4. CPU 에는 캐시가 있어서 메모리에 접근 횟수를 줄일 수 있다.

5. 각 프로그램들은 마치 자신이 방대한 메모리 공간 전체를 사용하는 것 처럼 생각하며 작동한다.

6. CPU 에서 참조하는 주소값은 실제 물리 메모리 주소값이 아니라 가상 메모리 주소값이다.

7. 가상 메모리 주소값은 각 프로그램의 페이지 테이블을 통해서 실제 메모리 주소값으로 변환된다.


+ 메모리 계층구조 
     CPU - 캐시메모리 - 메인메모리 - SSD, 하드디스크
     
     시간적 지역성과, 공간적 지역성으로인해 더 앞으로 요청할 데이터를 미리 가져다 놓을 수 있다.
